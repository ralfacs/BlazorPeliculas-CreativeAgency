// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorPeliculas.Client.Pages.Peliculas
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using BlazorPeliculas.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using BlazorPeliculas.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using BlazorPeliculas.Shared.Entidades;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using BlazorPeliculas.Client.Repositorios;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using BlazorPeliculas.Client.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Proyecto2\BlazorPeliculas\Client\_Imports.razor"
using BlazorPeliculas.Shared.DTOs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Proyecto2\BlazorPeliculas\Client\Pages\Peliculas\FiltroPeliculas.razor"
using BlazorPeliculas.Client.Components;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/peliculas/buscar")]
    public partial class FiltroPeliculas : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 58 "C:\Proyecto2\BlazorPeliculas\Client\Pages\Peliculas\FiltroPeliculas.razor"
        private List<Pelicula> Peliculas;
            string titulo = "";
            string generoSeleccionado = "0";
            private bool futurosEstrenos = false;
            private bool enCartelera = false;
            private bool masVotadas = false;
            private List<Genero> generos = new List<Genero>();
            Dictionary<string, string> queryStringsDict = new Dictionary<string, string>();
            private int paginaActual = 1;
            private int paginasTotales;

            protected override async Task OnInitializedAsync()
            {
                await ObtenerGeneros();

                var url = navigationManager.Uri;

                var queries = navigationManager.ObtenerQueryStrings(url);

                if (queries == null)
                {
                    await RealizarBusqueda(string.Empty);
                }
                else
                {
                    queryStringsDict = queries;
                    LlenarCampos();
                    var queryStrings = url.Split(new string[] { "?" }, StringSplitOptions.None)[1];
                    await RealizarBusqueda(queryStrings);
                }
            }

            private void LlenarCampos()
            {
                if (queryStringsDict.ContainsKey("generoid"))
                {
                    generoSeleccionado = queryStringsDict["generoid"];
                }

                if (queryStringsDict.ContainsKey("titulo"))
                {
                    titulo = queryStringsDict["titulo"];
                }

                if (queryStringsDict.ContainsKey("encartelera"))
                {
                    bool.TryParse(queryStringsDict["encartelera"], out enCartelera);
                }

                if (queryStringsDict.ContainsKey("estrenos"))
                {
                    bool.TryParse(queryStringsDict["estrenos"], out futurosEstrenos);
                }

                if (queryStringsDict.ContainsKey("masvotadas"))
                {
                    bool.TryParse(queryStringsDict["masvotadas"], out masVotadas);
                }

                if (queryStringsDict.ContainsKey("pagina"))
                {
                    int.TryParse(queryStringsDict["pagina"], out paginaActual);
                }
            }

            private async Task PaginaSeleccionada(int pagina)
            {
                paginaActual = pagina;
                await CargarNuevasPeliculas();
            }

            private async Task ObtenerGeneros()
            {
                var httpResponse = await repositorio.Get<List<Genero>>("api/generos");
                generos = httpResponse.Response;
            }

            private async Task TituloKeyPress(KeyboardEventArgs e)
            {
                if (e.Key == "Enter")
                {
                    await CargarNuevasPeliculas();
                }
            }

            private async Task CargarNuevasPeliculas()
            {
                var queryStrings = GenerarQueryStrings();
                navigationManager.NavigateTo("/peliculas/buscar?" + queryStrings);
                await RealizarBusqueda(queryStrings);
            }

            private async Task RealizarBusqueda(string queryStrings)
            {
                var httpResponse = await repositorio.Get<List<Pelicula>>("api/peliculas/filtrar?" + queryStrings);
                paginasTotales = int.Parse(httpResponse.HttpResponseMessage.Headers.GetValues("totalPaginas").FirstOrDefault());
                Peliculas = httpResponse.Response;
            }

            private string GenerarQueryStrings()
            {
                if (queryStringsDict == null) { queryStringsDict = new Dictionary<string, string>(); }
                queryStringsDict["generoid"] = generoSeleccionado;
                queryStringsDict["titulo"] = titulo;
                queryStringsDict["encartelera"] = enCartelera.ToString();
                queryStringsDict["estrenos"] = futurosEstrenos.ToString();
                queryStringsDict["masvotadas"] = masVotadas.ToString();
                queryStringsDict["pagina"] = paginaActual.ToString();

                var valoresPorDefecto = new List<string>() { "false", "", "0" };

                // generoid=7&titulo=spider ...

                return string.Join("&", queryStringsDict
                    .Where(x => !valoresPorDefecto.Contains(x.Value.ToLower()))
                    .Select(x => $"{x.Key}={System.Web.HttpUtility.UrlEncode(x.Value)}").ToArray());
            }

            private async Task LimpiarOnClick()
            {
                titulo = "";
                generoSeleccionado = "0";
                futurosEstrenos = false;
                enCartelera = false;
                masVotadas = false;
                paginaActual = 1;
                await CargarNuevasPeliculas();
            } 

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IRepositorio repositorio { get; set; }
    }
}
#pragma warning restore 1591
